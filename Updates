Important updates:
1. Write detail functioning of HashMap.
2. write below note in Set section:
This is an eye opener. Let me just brief on the normal behavior of Sets. HashSet maintains no order, LinkedHashSet maintains order of insertion so while iterating it will print the values in the order of insertion and Treeset maintain ascending order which means the elements will be printed in increasing order. 
3. Study about AtomicInteger Class. 

************************************************************************************************************************************
ServletStudy file
Difference between web server, web container and application server with examples. 
Web server: Web server is a server capable of handling HTTP request and send back HTTP response. Web server performs different functons like transalating DNS name to IP address, load balancing is also taken care in case of pool servers or server farms. Examples are Apache HTTP server, 
Web container or Servlet container: It a container that contains java servlets, JSP and other component and manages them. When i say manage them, then i mean by their co 0mplete life cycle. Example is Apache tomcat.  
Application servers: Application server contains web server so can priovide all the feature of a web server and in addition to these features it can provide applicatio level services like exposing business logics, connection pooling, transaction support, messaging service. etc. Weblogic, Glassfish are some examples of application servers. 

Make a note in Servlet Attribute section:
"As we already know that servlet attribute has scopes like session, context or request. So, to create an attribute we have to use the object of the desired scope. Example: for request  attribute request.setAttribute("Id", 101);. Likewise for context and config we will create their objects."

JSP Action Elements
As the names hints, these are some element created in JSP for some special tasks. Let's have a look at them one by one. 
1. forward action element: It is used to forward the request and response to another resource. We know about it through servlet. 
<jsp:forward page="anotherpage.jsp">
2. include action element: It is the way to implement include fucntion as we ahve in servlet through tags. 
<jsp:include page="anotherpage.jsp"> 
3. useBean action element: This element is used to instatiate a bean class in JSP page. 
<jsp:useBean id="" class="" scope="">
4. setPropety and getProperty action element: these elements are used to get and set the values of a property of bean. Generally, used in application based on java beans.
<jsp:getProperty name="nameOfBean" property="propertyName">
<jsp:setProperty name="nameOfBean" property="propertyName" value="ValueOfProperty">
5. plugin action element: This element is used to plugin the applet in the bean. 

Expression Language in JSP
Expression language in JSP actually simplifies the access of object related to session, request, response and other scope.
The syntax of EL is: ${expression}. To simplify the task even furthur, we are given some commonly used object in JSP. So, we do not need to create them overselve but can use directly. Below are the implcit EL object:
pageScope (pageLevelScope), requestScope, sessionScope, applicationScope, param, paramValues, header, headerValues, Cookies, initParam, pageContext. 
There are many operators we can use in Expression language. 

*************************************************************************************************************************************
ServletInterviewQuestions File
RRR: Source1: 1, 11, 18, 20, 24, Source2: what is servlet config obkect?, 
AAA: Source1: 7: "The only difference between printwriter and ServletOutputStream is that first the char oriented used for creating char or string may be while other is used to create may be byte array." Source2: 2: Idempotent method are those which gives the same result even when called multiple times in a row while non idempotent are those which can have different result when same request is sent again. GET is idempotent while POST is non idempotent. Now, Safe methods are those which do not change the representation state of resource at server side. Do not mix up in idempotent and safe because they loop same. 
*************************************************************************************************************************************

JavaScriptStudy File

JS JSON
JSON is for JavaScript Object Notation. JSON is primaryly used for transferring and storing data which is light weighted as compared to other formats generally used for the same purpose like xml. Syntactically JSON is similar to JS and thus parsing for JSON to JS is easy.
We typically write JSON like below
"employees":[{"Firstname":"Rishav", "LastName":"Mishra"}, {"Firstname":"Satish", "LastName":"Mishra"}, {"Firstname":"Asha", "LastName":"Mishra"}]
To convert JSON to JavaScript we can use method parse(). var obj = JSON.parse(Text).


JS FORMS

JS Forms
The most important use of JS in HTML form is validation of the values entered by User. Check some basic validation implementation. 
We also have some automatic Validation HTML keyword and attributes which are disabled, required, min, max and etc.  

JS Form API
We have some form validation API based on javascript. Couple of them are CheckValidity() which returns true if the data is valid after checking all the validation constraints in HTML is valid and setCustomValidity(). We also have some validation properties which are rangeOverflow, rangeunderflow, tooLong, typeMismatch and many other. We can use these validity properties as validity.propertyName. Try some examples. 

JS OBJECT

Object Definition
We have some primitive data type in JS which are Number, String, Boolean, Null and undefined. However, Number, String and Boolean can be an object if created using new keyword. Arrays, Dates are always object. A simple example of an object in JS through leteral way is below:
var employee = {firstName:"Rishav", LastName:"Mishra", id:"101"}; Currly braces are used to depict an object. 
Creation of object in JS through new keyword is something like below:
var employee = new employee(); 
employee.firstName="Rishav";
employee.secondName="Mishra";
employee.id="101";
JS objects are mutable which means that var x= person and x.age=10; will atually make change in the memory where person is stored and age will be 10. 

Object Properties
The name and value pairs associated with an object is known as its properties. Now, we will check how can we add, change, delete or play arond with the properties? 
adding new property to an already existing object: employee.department = "IT".
Changing a property: employee.department="ADMIN";
deleting a property: delete employee.department;

Object Methods
Property of a method could be a pair of name and a function as well like below:
employee.fullname = function(){return FirstName+LastName;}
Also, to access the above function: employee.fullname();
We also have some builtin method for all the object like toUpperCase() and other.

Object Constructor
It is same as the constructor in java to create an object. Below is an example of a constructor.
function employee(fname, lname, age, department){
  this.fname=fname;
  this.lname=lname;
  this.age=age;
  this.department=department;
}
We can create a new employee object using this constructor like: employee rishav = new employee(rishav, mishra, 25, IT);
JS gives some builtin constructors for creating string, array and other. JS also have this keyword and this() function this just works the same way as in java. 

Object Prototype
How will you add new properties and function to already existing object? Like if we have to add new properties or function to all the employees then we need to add new property to its constructor to make it visible to all. For this, we need to write the entire constructor again. This would be quite troublesome. So, we have prototype property which lets you do the same in shorter way like below:
employee.prototype.Nationality="Indian"
employee.prototype.changeName=function("changedName"){return this.name=changedName;}

JS FUNCTIONS

Function Definition
Well functions are there to perform some tasks. Firstly, how do we create function in JS? We have to two ways.
First(function expression or annonymous method): var functionName = function(){function body};
Second(Function Declaration): function functionName(){function body};
We do have a concept of function constructor but we will usually do not finds its use.
JS has the concept of variable and function hoisting due to which we can use the varibale and function before declaring them. 
We also have self invoking function means those functing are not needed to call. See the syntax below:
(function(){function body})();
Functions are also considered as object. If we do instanceOf on a function then it will return function as type. 

Function Parameter
JS does not have any check on the function parameters. So, need to check the where no. of arguments are less or more than the actual parameters needed. 
In case the parameters are less then the missing parameters are taken undefined. However, we set them to default values before we actually procede with any actual logic inside our function. I am not sure what will happen if we intentionally send argument more than defined in the declaration. 
We also have a default object in JS which is argument object. You can consider this as array of argument. so, we can it inside function. It is not necessary that we defined any parameter while defining the function. 
Arguments in JS are passed by value, not by reference. Just like java. 

Function Invocation
function invocation is about calling a function. A functions runs not when its decalred but when its declaration is called. We can call a method through setting an event, or windows object or this keyword. We can also invoke a function through function constructor. 

Function Call
Functions in JS are method of object because if a function does not belong to any defiend object then it by default belongs to global object. We already know that a property of an object can be based on function. We can also use call() method to invoke any function. 

Function Apply
We can use apply() a built in function of JS to invoke functions in JS. The difference between call() and apply() is that apply takes the arguments of a method in the form of array. Each element of that is just like a set of arguments. 


JS HTML DOM

DOM intro
DOM stands for document object model. Through document object we can access any element or field of an HTML document and thus helps in manipulating them as needed. In HTML DOM, we can imagine the entrie document and its elements creating a tree to traverse through it. 

DOM Methods
Document object has many methods and properties which we will see in coming headings while one example of each is getElementById() and innerHTML as property. 

DOM Document
Through JS, we can create HTML, traverse through HTML document and change the HTML as well. We will see some necessary methods for doing all this. 
Methods for creating the HTML Document:
1. document.createElement(). Ex: var f = document.createElement("form");
2. document.appendChild(). Ex: f.appendChild("input");
3. document.setAttribute(). Ex: f.setAttribute("id","nameInputField");
4. document.replaceChild(). Ex: f.replaceChild("nameInputField", "a newly created element");
5. document.removeChild(). Ex: f.removeChild("nameInputField");
6. document.write(). Ex: document.write("anything"). This will print anything in the document. 

Methods for Fidning the HTML element:
1. document.getElementById("id"). This will get you the element with the specified id. 
2. document.getElementByTagName("input"). This will get you all the tags of the specified type. 
3. docuemt.getElementByClassName("customCSS"). This will get you all the tags with the 

Methods for changing the captured HTML element:
1. element.innerHTML = "new HTML content". This will replace the HTML content for the selected tag(s).
2. element.attribute = "new attribute value". This will give new value to the selected attribute(s).
3. element.attribute("attribute", "value");. This is just another way of changing attribute value.
4. element.style.property = "new property". This will give new style to the older CSS. 

We will get a lot more new properties and methods in the newer version of HTML DOM level 3. 

DOM Elements
We have already seen three ways with which we can select the DOM elements which are getElementById(), getElementByTagName() and getElementByClassName(). If we have to select the element just the way we select in CSS, then we have a dedicated method querySelectorAll("p.class"). Here, we can mention the combination of tag and class. 

DOM HTML
We have already seen the way for changing the HTML. Couple of most used properties are innerHTML and attribute="new value".

DOM CSS
We can change the CSS, through document.getElementById("id").style.name="new value".

DOM Animation
will do it later.

DOM Events
To make our web pages more responsive, JS is a big help. We can use JS functions and properties on the basis of different events. We write events in HTML as the attribute of element Let see what all events we have in JS. 
1. onclick: If user click an element. 
2. onload: on load of the document or web page. 
3. onunload: on unloading page. This can happen when tag or window is closed. 
4. onchange: on the state change of an element. Generally used with check boxes or input fields. 
5. onmouseover: define the state of element when mouse is over.
6. onmouseout: defines the state of element when mouse is out. 
7. onmouseup: when mouse is kept unclicked. 
8. onmousedown: when mouse is kept clicked. 

DOM Listener
We have already seen one way of adding event on diiferent condition on HTM: element by adding them as the attribure of HTML. We can do this by addEventListener(event, function). One example is below:
document.getElementById(id).addEventListener("onclick", function());. This way we can add event listener in javascript. We can add multiple events to a partiular element. We can add event to window object by window.addEventHandler(). We also have another method called removeEventListener("event", "function").
Event Bubbling and Event Capturing: Under event bubbing, event related to innermost element is triggered first while outermost will trigger last. In event capturing, event related to outermost element will be triggered first while last for the innermost element. 
By default, event capturing is used in java while if we have to change this to event bubbling then we have to pass true as argument in addEventListener() method. 

DOM Navigation
DOM also has the concept of nodes. Here, we see document as a tree and everything as a node. A node will have parent node (except root node) and will have child node (except the bottom node). We have different methods and properties through which we can access every node of a document tree. These different node properties are below:
1. parentNode: to access the parent node of a document.
2. childNodes[number of nodes]
3. firstChild
4. lastChild
5. nextSibling
6. previousSibling
To find the value, name or type of an node, first we need to reach that node and then use the peroperties nodeValue, nodeName or nodeType respectively. Here, type of node means whether element node, attribute node, Text node etc.

DOM Node
This explains nothing but how can we create nodes using methods like createElement(), appendChild(), replace/removeChild(). 

DOM Collection
When we do var x = document.getElementByTagName("div"). Then, x will hold all the div tag of that document. This means it has a collection of div tags. To access the secondTag we can use this collection just like an array in JS like y = x[1]. we can also find the number of certain tags by length property. 

DOM NodeList
NodeList is nothing but the list of nodes returned by method like getElementByClassName(), queryAllSeclector() and other. This is more like DOM HTML collection however, here we are returned the JS node list rather HTML elements. 

JS BOM

JS Window
Window object is the top level object in BOM below which we have docuemnt, history, screen, navigation and location. With window object, we can use some of its default methods like close(), open(), moveTo(), resizeTo() and other. InnerWidth and InnerHeight are some important properties. 

JS Screen
Screen object has some important properties which are width, heigth, availWidth, availHeight, colorDepth, pixelDepth and other. 

JS Location
Location also has got some important properties related to the URL. SOme of them are location.url which gets the current url, location.hostname, location.post, location.protocol and other. We also have some methods like location.assign() and other. 

JS History
History has got method like back() and forward()

JS Navigator
Navigator is actually a very important object because we will be using it alot. A lot of important information can be found through navigator object. These information are appName, appCodeName, app.platform, product, appVersion, userAgent and other. 

JS Popup Boxes
There are three type of popup boxes in JS. These are Alert, confirm and Prompt. We can have create them like window.alert(), window.confirm() and window.prompt("SomeText", "UserText"); Check the exmaple of each. We can do a line break in alert through "\n". 

JS Timer
We can have event triggered or untriggered on the basis of time in JS as well. We can use it like window.setTimeout("myFunction", "3000"). With the timeout set, the fucntion will be called after three second of clikcing the button. To remove the set timeout, we can use the method clearTimeout(). We also have setTimeInterval(function(), n) method which is used to repeat a function after n time mentioned as the parameter. To remove the setInterval, we can use window.clearInterval(). 

JS Cookies
We can also creates cookies in JS. document.cookies="name:jhon". We will this later in more depth. 

JSTL
Another very important aspect of JSp is its Standard tag library. We can understand these tags as a small chunk of code that performs a certain task. However, we can create our own custom tags as well. To write view as well as modal part in same JSP, we should use JSTL and Custom tags. Some of the important standard tags are below:






Some Important Questions:
1. How to submit form using JavaScript? document.form[0].submit();. 
2. How o read or write a file using JS? active X object or some JS extension. 
3. Looping options in JS> Same as java. 
4. void(0) is used to prevent the page from loading. 
5. Handling exception is also done through try, catch and finally block only. 


JAVASCRIPT COMBO INTERVIEW QUESTIONs
source1:22, 27, 29. Delete operator is used to deleted the property of an object or the object itself. but it does not have any effect on var or on function, 31, 43, 56, 66, 73. Also tell the event you know, 74. also tell how to create deferred script, 75, 84.
source2: 4, 8, 9, 15, 22, 24 here, cursor is the mouse cursor, put @@@A on 35 36.
Source3: 3, 5, We will do it in hardcore requiorement of JS. 
Source 4: 

*************************************************************************************************************************************

Question Faced in Interview File

CBSI telephonic interview
1. Two static overloaded methods in which if one method accept argument as string and other accept Object. If null if passed to the method then which implementation will be invoked? String will get invoked because string can be a null. 

2. Question is same as above question, only this is object argument is replaced by Integer. Now if we pass null then what will happen? It will give compilation error as it will be ambiguous to invoke which of the two overloaded methods. 

3. What is the difference in get and load methods in hibernate. 

4. What all is present under jdk folder? When we download java the we get jdk folder which contains jre folder, bin folder and other stuff. Bin of Jdk has got all the executable files like compiler, debugger, documentor, dessembler and other. JRE folder got the bin folder (contains all dll files), classes folder, liscence file, readme file, introduction html file. 

5. What is overhiding? 
When child class writes the same method as a static method in parent class then this is called as overhiding. No error is received. 

6. Difference in get and load method of hibernate? 

7. What was the last code change you have done? File upload for anti virus check. 

8. How to print only unique number from an arrayList with mixed numbers? We can convert the list to set as set contains only unique values. 

9. Printing an string from JSP? We can print string in three ways in JSP which are expression element, out.print() and <c:out value=${some exoression or string}>. 

10. Three columns in a table: id, name and salary. Find out the top salary and name of the employee. "select name max(salary) as Max_salary from employee." and second highest salary as "select max(salary) from employee where salary NOT IN (select max(salary) from employee)".

11. Added another column in the above table department. Asked to get max salary of each department. select name, max(salary) from employee group by department. 

12. What is null pointer exception. How will we create a null pointer exception by changing second line of the below code.
String s = null;
System.out.println(s);
A string created as null or got the default value of null does not throw null pointer exception while it prints the "null". In the above code, if no changes are done then it will print null. Yes, it will print null just like string. Also. if a string is created using new keyword and not given anything then will print nothing but not gives null pointer exception. Only when a string is created by using new keyword and given a reference which is null then it gives null pointer exception. This is because if a reference is null then it isnt pointing to a memory address. Therefore below code will give null pointer exception.
String s;
String s1 = new String(s);
System.out.println(s1);
The best way to handle null pointer exception is to do check if the object we are using is not a null before using it, esp the one that we are getting but we havent created. 

13. What will happen if we override service method is servlet and write one print statement when a request comes? We also have doGet and doPost methods written in the same servlet.
Only the print statement written in overriden service method will be printed and doGet or doPost will not be called. This is because we are not suppose to override the service method of parent class as its implementation is only responsible for calling either Get or Post method according to the request. 

14. If called and calling methods has catch block catching the Exception and exception comes in try block of called mathod then which catch block will catch the exception and what will the flow of the program. 
Catch of child will catch the exception. Also, the code written after the catch of the child will execute giving back the control to the called method. 

15. Where have i used inheritance in code or ever written a classes with inheritance relation?

16. What design patterns have you worked on? Singleton, Factory pattern and MVC. Describe each with a real time example. 

17. Difference in primary and unique key?

18. Complete JaxB working. Explain with code.

19. we have an array with numbers which are repeated. We need to find out the count of each numbers in the array. 

20. Print the reverse of an int number without using String or array.

21. How will you manage transaction in jdbc? How will you manage to commit one query while rollback the other query in jdbc if the exception comes in third query. 
Here we can use savepoint. 



*************************************************************************************************************************************
Java study
Topics need to be revised:
1. Whats present inside jdk, practically and theorytically?
2. Is java an interpreted language? No Java is not interpreted language. The recompilation of jvm byte code to jit machin code is considered as interpretation. WHile java involves compilation. 
3. Copy constructor
4. Can we have static class? We cannot have top level classes as static while nested classes can be static. 
5. Can we use super keyword in main method? No. We cannot. Check its use.
6. Be careful about initializer block and constructor invocation order. It is static initializer of parent, static initializer of child, instance initializer of parent, construtor of parent, instance initializer of child, constructor of child. 
7. How interface involves loose coupling in java? Interface just not only allow a class to implement its method but it allows multiple classed to implement its method. Now, when we interact with the class using the interface then we can feed any class implementing the class without much modification. 
8. Object Cloning. Deep Cloning and shallow cloning. Explain using: https://dzone.com/articles/currying-functions-in-scala-1
9. Unboxing. we do it like int a = b.intValue();
10. String are immutabe. String are inert concept. 
11. Immutable Class
12. Check the working example of string tokenizer. 
13. Check all note point of Exception handling in java, Correct in note point 6 that after catch block runs the code outside the try block will execute. Also, add one more not point "If we write return only in eighter try or catch block then we will get error. We need to write one at the last as well."
14. thead lifecycle, note points of how to create a thread and other too. 
15. What is the difference in wait and sleep or waiting or sleeping? Wait method is object class method and invoked on an object for synchronization while sleep method is of thread class and invoked on thread for intentionally sleeping the threads work for certain duration. Check Join() method of thread as well. 
16. Order in sets: This is an eye opener. Let me just brief on the normal behavior of Sets. HashSet maintains no order, LinkedHashSet maintains order of insertion so while iterating it will print the values in the order of insertion and Treeset maintain ascending order which means the elements will be printed in increasing order. Also, hashset and linkedhashset can contain one null value while treeset cannot contain any null value. 
17. Update in the internal working of HashMap: First the hashvalue of key is find out through hashfunction method. Then, hashvalue is devided by 16. Whatever remainder comes would be the index and that will be the bucket. That's why multiple entries many have same bucket. Eeach bucket is a list in itself. When we try to get a map entry then again the hashcode of key is findout followed by division with 16 which will provide the index. There are changes that the bucket will have multiple entries thus we compare the key of each entry with the key provided as the argument of get method. 
18. Treemap cannot have any null key while can have one null value and it maintains the ascending order. WRT null values, hashtable works the same as treemap. Hashtable do support enumerator as well and is synchronized.
19. Check example of comparable and comparator interfaces. 
20. How do we do transaction management through normal JDBC? We have to create transaction management and need to use methods like rollBack(), commit() and save(). Generally, rollback() is written in catch block. 
21. signature of variables and methods in interface. 
22. how to create a singleton class. CHeck carefully.
Add implementation index 1 to downcasting in java study.
**************************************************************************************************************************************
JavaInterview Question File
source1: 52, 123, 129, how to synchronize a collection like list, Source2: 24, 43, 51, 52, 92; Source3: 1, 7, 9, 11; Source4: what is the use of system class; Source5: Why String is popular as hashmap key?; Source6: 1(java related feature), What is unsupportedModifictaionexception, different view for Map(values, entryset and keyset), Source 7: 10. What is context switching, 11, 14, 15, 22, 23, 25; source 8: 
**************************************************************************************************************************************
SQL study File
1. SET Operators, 
2. Difference between union and union all,
3. Temp table concept 
4. Alter table (what all comes under it and check syntax too). 
5. check With, like, top Clauses
6. Check order by random and order by limit, how to get limited records in a select query.  
7. Important keyword of slect
8. Insert in one row, insert in multiple column, insert in from other table, insert in multiple rows, insert in multiple rows from other table.
9. Update and update using join.
10. SQL delete duplicate rows. We will use with clause and partition to do so. 
11. Difference in Intersect and inner join. Check all kind of joins with example. 
12. Check all 7 types of key with book table example and 4 types of integrities. 
13. Check the example of 6 sql constraints. 
14. Sub quries and how it is used in select, insert, update and delete. Check corelated and non-corelated queries. How exactly corelated query runs?
15. Check view, materilized view and inline view. Purpose (all three reasons) and advantage of each. Disadvantages.
16. Index. Do and dont, types. 
17. sequence and like operator
18. Data Control language: Grant, revoke, role, privilage. Check syntax as well. 
19. Transaction control language: ACID Properties, Set transaction, Commit, Rollback and save.
20. Stored procedure, syntax, advantages. Comparison with views. 
21. Trigger (check in a little depth next time)
22. Complete topics after triggers. 


SQL quries
1. how to show date column value including second
2. how to show db date 
3. escape character in oracle?
4. get details from one table even a single row present in other table. (Means if other table is not empty).
5. trick for name only numbers.
6. Delete duplicate record:question 11, http://www.java67.com/2013/04/10-frequently-asked-sql-query-interview-questions-answers-database.html

***************************************************************************************************************************************
Hibernate Study file
The difference between load and get method. These methods are there to returnt the persisted (saved in database) object of a given id. However, when we call load the it does not return the real object but return thw proxy for th real object however get gets use the real persisted object. Also, load return objectNotFoundException if object not found while get gives null if object not found. 

The difference between persist and save method. Both are there to add an object in the database. Firstly, both works the same with persistent object but the difference comes in case of transient (which is not yet saved in db) object. Persist does not execute an insert statement outside the boudary of transaction while save method does that. Persist object not necessary that immediately persist the transient object while save will to it immediately.  
***************************************************************************************************************************************
JSP Study File
Topics for quick check
1. Scripting Elements: All 5 categories
2. Implicit Object: (request, response, session, application, config, page, pageContext, Exception and out)
3. Action Tag: Used to control the flow of the jsp page and to use the bean. 
4. Expression Element
5. JSTL and Custom tags
***************************************************************************************************************************************
Web service Study
1. Importance of web services
2. UDDI, WSDL
3. Layers of Web service protocol stack: It contains four layers contains four layers of protocols which are transport protocol which is HTTP in case of REST, messaging protocol which can be XML, JSON or any other type, description protocol is the WSDL in case of SOAP web services and lastly, discovery protocol layer which is nothing but UDDI which provides the platform for discovery a needed web service. 
4. Addressing and resource means in RESt
5. Key features of REST: http protocol, any messaging format, no wsdl, stateless, caching
6. HTTP request and response components.
HTTP request must be having the URL and the type of http method used to send the request. Also, it should contain the content type and accept header params in header of request. It can also contain an payload in case of post and put request. Response should contain the status code and resultant output of the request processed. Response should also contains header param like the response type and chache param or any other param, if any. 
7. Statelessness of web services and its advantage. 
Statelessness means that web services does not track any state(data) regarding the different calls made a client and therefore, each client request should contain sufficient data for making server capable of processing request. Restful web service should be stateless so as to be simpler and more scalable. It is a design based decision of REST architecture that is quite aligned with HTTP protocol which is stateless too.  
8. Chaching in web service. How we do it and advantage. 
Caching means storing servers response on the client side so that client do not need to send request for same resource again and again. Cache control header is send in the server resoonse to decide the properties of caching. The hear can be set public or private. If made public then any component can cache it while private make only destination client to cache the response. We can set the max age of the caching. It mean until what time a response can be cached. 
9. Payload. It are the data that we send in a request while request param does not fall in this category. We cannot have payload in GET and DELETE request.  
10. Different application integration styles?
Here, Integeration styles means how different component of an application can be integrated or can interact. This can be done in multiple way which are messaging (example:JMS), batch files, Remote procedure calls and file transfer. 
11. Annatation used when exchanging data in XML. @XMLRootElement, @XMLAttribute, @XMLElement.
12. JAXB purpose in webservice:
Jaxb is used to marshal and unmarshal the java object to xml and vice versa. 
Code for marshalling:
JAXBContext jcontext = JAXBContext.getInstance(Student.class);
Marshaller marshaller = jcontext.createMarshaller();
Marshaller.setProperty(Marshaller.JAXB_FORMATED_OUTPUT, true);
Student s = new Strudent(1, “Rishav”);
Marshaller.marshal(s, new FileOutputStream(“path of file”));
Code for Unmarshalling
JAXBContext jcontext = JAXBContext.getInstance(Student.class);
Unmarshaller unmarshaller = jcontext.createUnmarshallar();
File file = new File(“XML data file path”);
Student student = (Student) unmarshalar.unmarshal(file);
13. What HTTP basic authentication in web services and how do we implement it?
HTTP basic authentication is a simple technique of providing authentication on accessing a web resource. For creating the basic autherization param we need to create a string. First create a simple string "username:password", then encode the string through encode Base64 and append the string "Basic " with the previous string. Finally, send the resultant string as a value of Authorization key param in header. On the client side, we can use header param through annotation @headerparam("Authentication") String authString. 
14. How do we configure web service. 
15. WADL: Web application description language which a machine readable xml format document to derscribe the http based web service. 
***************************************************************************************************************************************
Hiebernate Quick Revise
1. Spring ORM implementation using Hibernate ORM.
2. Hibernate basic implementation for simple j2EE app. Check the client Specially.
3. Different hibernate methods.
a. difference in persist and save method(). First, persist method do not garuntee to assign value to transient object the value immediately, that may be assigned during flush time. Alsoo, it does not gaurntee to do insert outside the transaction boundry. Save can perform insert outside the transaction object. Another difference i recollect is that if we use incremental generator where primary id is given by hibernate then save return the primary key assigned while persist does not. 
b. The difference between load and get method. These methods are there to returnt the persisted (saved in database) object of a given id. However, when we call load the it does not return the real object but return the proxy for th real object however get gets you the real persisted object. Also, load return objectNotFoundException if object not found while get gives null if object not found. 
c. SaveOrUpdate(): This method will save the data if the data is not present in the table already, while update it if its present. Wwe can use this method outside the transaction boundry. 
d. update(): method used only to update the existing resource. 
4. Hibernate hirerarchy or inheritance mapping. 
5. Hibernate object mapping types. 

hymn of weekend, perfect ed shareen, 
